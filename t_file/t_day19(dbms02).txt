day19(dbms 2일차)
sql문의 주요특징 -> select -> 자료형 -> 연산자 -> SQL 쿼리문의 종류

1. SQL문의 주요특징
1) SQL
	데이터 베이스를 관리할 때 사용하는 명령어
	SQL문, 쿼리문, 질의문

2) SQL문 주요 특징
	한 줄씩 실행되는 인터프리터 언어
	대소문자를 구분하지 않는다
* 일반적인 사용법(가독성을 높이기 위함)
	- 예약어는 대문자로, 그 외의 문자는 소문자로 작성한다
		예약어 : 이미 정해진 역할이 있는 단어를 의미, SQL에서 실질적인 명령어를 의미함(SELECT, FROM, ALTER...)
	- 여러줄에 걸쳐 작성이 가능하다
	- 들여쓰기를 활용한다

2. SELECT
	테이블에서 데이터를 조회할 때 사용하는 명령어

	SELECT [DISTINCT] 컬럼명 [AS "별칭"], 컬럼명 [AS "별칭"]
	FROM 테이블명
	[ORDER BY 컬럼명 [ASC or DESC]];	

	실행 순서 : FROM 절 -> SELECT 절 -> ORDER BY절

3. 자료형
1) 문자
	CHAR	: 고정길이 문자
		CHAR(용량)
		정해진 크기보다 작은 문자가 저장될 경우 남은 공간을 공백으로 채운다
		문자의 수가 변하지 않는 값에 사용

	ex)	CHAR(5)	'a'를 넣으면 a^^^^ 빈자리가 공백으로 채워진다
		CHAR(5) 'abcdef'를 넣으면 5자리를 초과하기 때문에 오류 발생

	VARCHAR2 : 가변길이 문자
		VARCHAR2(용량)
		문자의 수만큼 공간이 배정되어 남은 공간을 공백으로 채우지 않는다
		문자의 수가 변화가 있는 값에 사용
	
	ex) 	VARCHAR2(5) 'a'를 넣으면 a 공백없음
		VARCHAR2(5) 'HELLO'를 넣으면 HELLO 딱 맞게 저장
		VARCHAR2(5) 'ABCDEF'를 넣으면 오류 발생

2) 숫자
	NUMBER
		NUMBER(precision) : 정수
		NUMBER(precision, scale) : 실수
		precision : 정밀도(최대 유효숫자 자리수) scale : 소수점 기준 자리수
		precision이상의 값이 들어올 경우 오류 발생, s가 양수면 소수점 이하 음수면 소수점 이상 자리수
		s 범위 밖의 값은 반올림되어 적용된다

	ex) NUMBER(3)
		123 -> 123
		1234 -> 3자리 초과 오류 발생
		12 -> 12

	    NUMBER(5, 2) => precision = 5, scale = 2
		123.45 -> 123.45
		1234.56 -> 오류 발생(전체자리 5자리 -> 6자리 초과 오류발생)
		123.456 -> 123.46 (소수점 2자리까지 반올림 -> 3번째 자리수에서 반올림)
		123.2	-> 123.20 (소수점 이하 2자리 맞춤)
	
	    NUMBER(5, -2)
		12345	-> 12300(소수점 이상 2자리에서 반올림)
		12678 	-> 12700(반올림)

3) 날짜
	DATE	: 날짜와 시간, 형식(format)에 맞추어 값을 테이블에 저장하여 사용
	TIMESTAMP : 소수 초까지 정확한 날짜/시간 값을 저장하는 경우 사용

	ex) DATE 
		'2024-12-17' -> 2024-12-17 00:00:00
		SYSDATE -> 현재 날짜와 시간(2024-12-17 12:24:40)

	    TIMESTAMP
		'2024-12-17 12:24:56.345' -> 2024-12-17 12:24:56.345

4) 대용량
	BLOB(Binary Large Object) : 바이너리 대형 객체(이미지, 오디오, 비디오)
		이진 파일을 다룰 때 사용
	CLOB(Character Large Object) : 문자 대형 객체(큰 문자열이나 문서)
		최대 4GB 문자열 저장 가능
		LONG 타입을 개선한 데이터 타입

4. 연산자
1) 단항연산자
	양수 +
	음수 -

2) 산술연산자
	더하기	+
	빼기	-
	곱하기	*
	나누기	/
	피연산자 자리에는 숫자 타입을 사용한다. 연산의 결과는 숫자타입이다

3) 연결연산자
	연결(Concatenation) ||
	a || b a와 b 데이터를 하나의 문자열로 연결한다
	피연산자 : 숫자, 날짜, 문자타입 사용 가능

4) 관계(비교)연산자
	a > b : a가 b보다 크다(초과)
	a < b : a가 b보다 작다(미만)
	a >= b : a가 b보다 크거나 같다(이상)
	a <= b : a가 b보다 작거나 같다(이하)
	a = b : a와 b가 같다
	a != b : a와 b가 같지 않다	(sql에서는 <> 표준이다)

where 절
	원하는 행(row)을 조회하거나 연산처리한다
	
	SELECT [DISTINCT] 컬럼명 [AS "별칭"]	-- 3
 	FROM 테이블명	-- 1
	WHERE 조건식	-- 2
	ORDER BY 컬럼명 [ASC / DESC]; -- 4

5) 논리연산자
	AND	a AND b 	a조건과 b 조건이 둘 다 참이라면 참, 아니라면 거짓
	OR	a OR b 		a조건과 b조건 둘 중 하나만 참이라면 참, 둘 다 아니라면 거짓
	NOT	NOT a		a조건이 거짓이라면 참, 참이라면 거짓

6) SQL 연산자
	SQL에서만 존재하는 연산자
	
	BETWEEN a AND b		a 이상 b 이하인 조건을 만족하면 true
		BETWEEN 숫자a AND 숫자b	숫자 a이상 b이하인 조건이면 true
		BETWEEN 날짜a AND 날짜b	시작날짜 a부터 종료날짜 b까지 사이의 날짜이면 true
		- a와 b 사이의 대소관계 비교가 진행되기 때문에 BETWEEN 작은값 AND 큰값으로 사용해야한다
		- 날짜 사용시 BETWEEN 예전날짜 AND 최신날짜로 사용
	IN(a, b, c, ...)	a 또는 b 또는 c 인 조건을 만족하면 true
		a, b, c중 하나라도 만족한다면 true
	LIKE
		문자열의 패턴을 검색하기 위해 사용한다
		% : 어떤 문자를 포함한 모든 문자
		_ : 단일문자(문자의 길이 지정)
		
		a% : a로 시작하는 모든 문자
		%a : a로 끝나는 모든 문자
		%a% : 중간에 a가 들어가는 모든 문자
	IS NULL/IS NOT NULL
		데이터의 NULL 여부를 판단하기 위해 사용한다
		NULL : 데이터가 존재하지 않음을 나타내는 값
		IS NULL : 값이 NULL일 경우
		IS NOT NULL : 값이 NULL이 아닐경우
	- 숫자와 날짜 데이터를 NULL과 연산하면 결과는 NULL이다. 산술 표현식은 항상 결과가 NULL로 평가된다
	- UNKNOWN : 결과를 알수 없음, 조회할 수 없음
		NULL값과 조건을 사용하거나 NULL값 결과와 함께 사용할 경우 UNKNOWN
	
		a = NULL 	=>  UNKNOWN으로 평가되므로 조건을 만족하는 행이 없어서 결과가 출력되지 않는다
		a != NULL	=>  UNKNOWN으로 평가되므로 조건을 만족하는 행이 없어서 결과가 출력되지 않는다
		오라클은 길이가 0인 문자값을 NULL로 처리한다

7) NULL 관련 함수 => 테이블 생성 후 쿼리문 작성
- NULL이면 특정값으로 변경 
	NVL(컬럼명, 기본값) : 해당 컬럼의 값이 NULL이면 지정한 값으로 출력
	NVL2(컬럼명, NULL 아니면 사용할 값1, NULL 이면 사용할 값2) : NULL이 아니면 값1, NULL이면 값2로 출력

- 특정값이면 NULL로 변경
	NULLIF(컬럼명, 값1) : 컬럼의 값이 값1이면 NULL로 변환, 아니라면 컬럼의 값
	NULLIF(컬럼명1, 컬럼명2) : 컬럼1과 컬럼2의 값이 일치하면 NULL로 변환, 아니라면 컬럼1의 값

- COALESCE(값1, 값2, 값3) : 값1, 값2, 값3,.. 중 NULL이 아닌 최초의 값


5. SQL문(쿼리문)의 종류
- CRUD	: 기본적인 데이터 처리 기능
	Create(생성), Read(읽기), Update(수정), Delete(삭제)의 약자이다

1) SQL문의 종류
	SQL 명령어의 성격에 따라 분류한 것이다

- DDL(Data Definition Language) : 데이터 정의 언어
	테이블 조작 또는 제어 관련 쿼리문
- DML(Data Manipulation Language) : 데이터 조작 언어
	데이터를 조작하는 쿼리문
- DCL(Data Control Language) : 데이터 제어 언어(권한)
- TCL(Transaction Control Language) : 트랜잭션 제어 언어

2) DML : 데이터 조작 언어(데이터 조작어)
- SELECT : 조회
	SELECT [DISTINCT] 컬럼명 [AS "별칭"]
	FROM 테이블명
	WHERE 조건식
	ORDER BY 컬럼명 ASC or DESC;

- INSERT : 추가
	- 원하는 컬럼만 골라서 값을 저장할 때 사용
	INSERT INTO 테이블명(컬럼명1, 컬럼명2, ..)
	VALUES (값1, 값2, ...);

	- 모든 컬럼에 값을 저장할 때 사용
	INSERT INTO 테이블명
	VALUES (값1, 값2, ...);

- UPDATE : 수정
	UPDATE 테이블명
	SET 컬럼명1 = 값1, 컬럼명2 = 값2,..
	[WHERE 조건식];

- DELETE : 삭제
	DELETE FROM 테이블명
	[WHERE 조건식];

	































