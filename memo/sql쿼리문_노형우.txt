SELECT * FROM EMPLOYEES

--1. 모든 직원의 정보를 조회(단, 이름은 FIRST_NAME과 LAST_NAME을 띄어쓰기로 연결한 값을 이름이라는 별칭으로 표시)
SELECT first_name || ' ' || last_name 이름, employee_id 아이디, email 이메일, phone_number 번호, hire_date 날짜, job_id 부서, salary 봉급,
commission_pct 직책, manager_id 매니저id
FROM EMPLOYEES;

--2. 모든 직원의 이름(FIRST_NAME)과 급여(SALARY)를 조회
SELECT FIRST_NAME 이름, SALARY 급여
FROM EMPLOYEES;

--3. 급여가 5000 이상인 직원들의 EMPLOYEE_ID, FIRST_NAME, SALARY를 조회
SELECT EMPLOYEE_ID, FIRST_NAME, SALARY
FROM EMPLOYEES
WHERE SALARY >= 5000;

--4. 현재 날짜와 10일 후의 날짜를 조회(오라클 제공하는 기본 테이블 사용)
SELECT SYSDATE, SYSDATE + 10
FROM DUAL;

--5. DEPARTMENT_ID가 50인 직원들의 이름과 부서번호를 조회
SELECT * FROM EMPLOYEES

SELECT FIRST_NAME, LAST_NAME, DEPARTMENT_ID
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 50;

--6. LAST_NAME이 'King'인 직원의 정보를 조회
SELECT FIRST_NAME 성, last_name 이름, employee_id 아이디, email 이메일, phone_number 번호, hire_date 날짜, job_id 부서, salary 봉급,
commission_pct 직책, manager_id 매니저id
FROM EMPLOYEES
WHERE LAST_NAME = 'King';

--7. SALARY가 NULL이 아닌 직원들의 정보를 조회
SELECT first_name 성, last_name 이름, employee_id 아이디, email 이메일, phone_number 번호, hire_date 날짜, job_id 부서, salary 봉급,
commission_pct 직책, manager_id 매니저id
FROM EMPLOYEES
WHERE SALARY IS NOT NULL ;

--8. 직원 테이블의 모든 직책(JOB_ID)을 중복 없이 조회
SELECT * FROM EMPLOYEES;

SELECT DISTINCT job_id 직책
FROM EMPLOYEES;

--9. 급여가 3000에서 7000 사이인 직원의 FIRST_NAME, SALARY를 조회
SELECT first_name 이름, salary 급여
FROM EMPLOYEES
WHERE SALARY BETWEEN 3000 AND 7000;

--10. 이름의 네 번째 문자가 'e'인 직원의 이름을 조회
SELECT * FROM EMPLOYEES;

SELECT last_name AS "이름"
FROM EMPLOYEES
WHERE last_name LIKE '%e___';

--11. JOB_ID가 'IT_PROG' 또는 'SA_REP'인 직원들의 이름과 직책을 조회
SELECT last_name 이름, commission_pct 직책
FROM EMPLOYEES
WHERE JOB_ID = 'IT_PROG' OR JOB_ID = 'SA_REP';

--12. 이름(FIRST_NAME)이 'A'로 시작하는 직원들의 정보를 조회
SELECT first_name 성, last_name 이름, employee_id 아이디, email 이메일, phone_number 번호, hire_date 날짜, job_id 부서, salary 봉급,
commission_pct 직책, manager_id 매니저id
FROM EMPLOYEES
WHERE FIRST_NAME LIKE 'A%'; 

--13. SALARY가 10000 이상이고 DEPARTMENT_ID가 90인 직원의 이름과 급여를 조회
SELECT * FROM EMPLOYEES;

SELECT FIRST_NAME 이름, SALARY 급여
FROM EMPLOYEES
WHERE SALARY >= 10000 AND DEPARTMENT_ID = 90;

--14. SALARY가 5000 이하이거나 DEPARTMENT_ID가 30인 직원의 정보를 조회
SELECT first_name 성, last_name 이름, employee_id 아이디, email 이메일, phone_number 번호, hire_date 날짜, job_id 부서, salary 봉급,
commission_pct 직책, manager_id 매니저id
FROM EMPLOYEES
WHERE SALARY >= 5000 OR DEPARTMENT_ID = 30;

--15. LAST_NAME의 두 번째 문자가 'a'인 직원의 정보를 조회
SELECT first_name 성, last_name 이름, employee_id 아이디, email 이메일, phone_number 번호, hire_date 날짜, job_id 부서, salary 봉급,
commission_pct 직책, manager_id 매니저id
FROM EMPLOYEES
WHERE LAST_NAME LIKE '%a_';

--16. SALARY를 기준으로 내림차순 정렬한 후 직원의 이름과 급여를 조회
SELECT first_name 이름, salary 급여
FROM EMPLOYEES
ORDER BY SALARY DESC;

--17. 직원의 급여에 10%를 더한 값을 BONUS라는 별칭으로 조회
SELECT salary * 1.1 AS "BONUS"
FROM EMPLOYEES

--18. SALARY가 6000 이상인 직원의 급여와 COMMISSION_PCT를 기준으로 정렬(급여는 내림차순, 커미션은 오름차순)
SELECT * FROM EMPLOYEES;

SELECT salary 급여, commission_pct 직책
FROM EMPLOYEES
WHERE SALARY >= 6000
ORDER BY SALARY DESC, commission_pct;

--19. 이름이 'A'로 시작하고 급여가 10000 이상인 직원들의 이름과 급여를 조회
SELECT first_name 이름, salary AS "급여"
FROM EMPLOYEES
WHERE first_name LIKE 'A%' AND salary >= 10000;

SELECT * FROM EMPLOYEES;
--20. 급여가 10000 이상 15000 이하이고, 부서 ID가 80 또는 90인 직원들의 이름, 급여, 부서 ID를 조회
SELECT first_name 이름, salary 급여, department_id AS "부서 ID"
FROM EMPLOYEES
WHERE (SALARY BETWEEN 10000 AND 15000) AND (DEPARTMENT_ID = 80 OR DEPARTMENT_ID = 90);

--21. 입사일(HIRE_DATE)로부터 정확히 1년 후의 날짜를 계산하여 입사 1년 후라는 별칭으로 출력
SELECT hire_date 입사일 ,hire_date + 365 AS "입사 1년 후"
FROM EMPLOYEES



